---
import Cta from '../components/Cta.astro'
import GalleryCta from '../components/GalleryCta.astro'
import Card from '../components/sections/Card.astro'
import Collection from '../components/sections/Collection.astro'
import Video from '../components/Video.astro'
import Layout from '../Layouts/Layout.astro'
import { getSanity } from '../lib/api'
import '/src/styles/style.scss'

const query = `*[_type == "gallery"]{
	...,
	sections[]{
		...,
		projects[]->{
			...
		}
	}
}`
const gallerySections = await getSanity(query)
const sections = gallerySections[0].sections
const collectionSections = sections.filter((section) => section._type === 'collection')
---

<script is:inline src="/ScrollSmoother.min.js"></script>
<script>
	import { gsap } from 'gsap'
	import { ScrollTrigger } from 'gsap/ScrollTrigger'

	gsap.registerPlugin(ScrollTrigger)
	gsap.registerPlugin(ScrollSmoother)

	window.smoother = ScrollSmoother.create({
		content: document.querySelector('.scroll-content'),
		smooth: 2, // how long (in seconds) it takes to "catch up" to the native scroll position
		effects: true, // looks for data-speed and data-lag attributes on elements
		smoothTouch: 0 // much shorter smoothing time on touch devices (default is NO smoothing on touch devices)
	})

	let smoother = window.smoother

	const eachMenuItem = document.querySelectorAll('.list-item')
	const eachCollection = document.querySelectorAll('.collection-section')
	const dialogToClose = document.querySelector('.search-dialog')

	eachMenuItem.forEach((item, index) => {
		item.addEventListener('click', () => {
			smoother.scrollTo(eachCollection[index], true, 'top top')
			dialogToClose.close()
		})
	})
</script>
<Layout>
	{
		sections.map((section) => {
			switch (section._type) {
				case 'card':
					return (
						<Card
							pagename="gallery"
							title={section.title}
							tag={section.tag}
							text={section.text}
							image={section.image}
							styles={collectionSections}
						/>
					)
				case 'collection':
					return (
						<Collection
							titleColor={section.titleColor}
							title={section.title}
							image={section.image}
							projects={section.projects}
							themeColor={section.themeColor}
						/>
					)
				default:
					return null
			}
		})
	}
	<!-- <Card
		pagename="gallery"
		title={sections[0].title}
		tag={sections[0].tag}
		text={sections[0].text}
		image={sections[0].image}
		styles={collectionSections}
	/>
	<Collection
		titleColor={sections[1].titleColor}
		title={sections[1].title}
		image={sections[1].image}
		projects={sections[1].projects}
		themeColor={sections[1].themeColor}
	/>

	<Collection
		titleColor={sections[2].titleColor}
		title={sections[2].title}
		image={sections[2].image}
		projects={sections[2].projects}
		themeColor={sections[2].themeColor}
	/>
	<Collection
		titleColor={sections[3].titleColor}
		title={sections[3].title}
		image={sections[3].image}
		projects={sections[3].projects}
		themeColor={sections[3].themeColor}
	/>
	<Collection
		titleColor={sections[5].titleColor}
		title={sections[5].title}
		image={sections[5].image}
		projects={sections[5].projects}
		themeColor={sections[5].themeColor}
	/> -->

	<!-- <ProjectGrid pagename="gallery" projects={projects} /> -->
	<!-- <GalleryCta title={sections[4].title.title} /> -->
</Layout>
<Video />
