---
import IconCard from '../items/IconCard.astro'
const { title, cards, pagename = 'home', text } = Astro.props
---

<section id="why-the-soul-of-the-gypsy" class="why-section">
	<div class="wrapper">
		<div class="title">
			<h2>
				{title}{}
			</h2>
			{text ? <p>{text}</p> : null}
		</div>
		<div class="cards">
			{
				cards.map((card) => (
					<IconCard icon={card.icon} title={card.title} text={card.description} />
				))
			}
		</div>
	</div>
</section>

<script>
	import { gsap } from 'gsap'
	import { ScrollTrigger } from 'gsap/ScrollTrigger'
	gsap.registerPlugin(ScrollTrigger)

	const allIconCardGrids = document.querySelectorAll('.why-section .cards')
	const allWhyTitleContainers = document.querySelectorAll('.why-section .title')

	allWhyTitleContainers.forEach((title) => {
		const h2 = title.querySelector('h2')
		const p = title.querySelector('p')
		const span = title.querySelector('span')

		// Create an array of elements that exist
		const elements = [span, h2, p].filter(Boolean)

		gsap.to(elements, {
			scrollTrigger: {
				trigger: h2,
				start: 'top 80%',
				toggleActions: 'play none none reverse'
			},
			opacity: 1,
			y: 1,
			stagger: 0.2
		})
	})

	allIconCardGrids.forEach((grid) => {
		const cards = grid.querySelectorAll('.icon-card')
		const img = grid.querySelector('img')

		gsap.to(cards, {
			scrollTrigger: {
				trigger: cards[0],
				start: 'top 80%',
				toggleActions: 'play none none reverse'
			},
			opacity: 1,
			x: 1,
			stagger: 0.2 // Add this line
		})

		gsap.to(img, {
			scrollTrigger: {
				trigger: img,
				start: 'top 80%',
				toggleActions: 'play none none reverse'
			},
			scale: 1
		})
	})
</script>

<style lang="scss">
	.why-section {
		.wrapper {
			.title {
				h2 {
					color: $white;
					max-width: max-content;
					width: 100%;
					position: relative;
					opacity: 0;
					transform: translateY(4rem);
				}
				p {
					max-width: 50ch;
					margin-block: 2.5rem 0;
					opacity: 0;
					transform: translateY(4rem);
				}
			}
			.cards {
				margin-block: 4rem 0;
				display: grid;
				grid-template-columns: 1fr 1fr 1fr;
				gap: 2rem;
				position: relative;

				& > img {
					position: absolute;
					width: 100px;
					right: -2rem;
					top: -2rem;
					z-index: 10;
					scale: 0.01;
				}
			}
		}
		@media (max-width: 900px) {
			.wrapper {
				.cards {
					grid-template-columns: 1fr;
					gap: 4rem;
				}
			}
		}
	}
</style>
