---
import { urlForImage } from '../../lib/urlForImage'
import Project from '../items/Project.astro'

const { title, image, projects, themeColor = 'sketchbook', description } = Astro.props

const bgUrl = `url(${urlForImage(image).format('webp').url()})`
---

<script>
	import { gsap } from 'gsap'
	import { ScrollTrigger } from 'gsap/ScrollTrigger'
	gsap.registerPlugin(ScrollTrigger)

	const allProjectItems = document.querySelectorAll('.project .mask > img')
	const allProjectItemsText = document.querySelectorAll('.project > .text')

	allProjectItems.forEach((project, index) => {
		const projectText = allProjectItemsText[index]

		const tl = gsap.timeline({
			scrollTrigger: {
				trigger: project,
				start: 'top 80%',
				toggleActions: 'play none none reverse'
			}
		})

		tl.to(project, {
			clipPath: 'polygon(0 0, 100% 0, 100% 100%, 0% 100%)'
		})
			.to(
				project,
				{
					scale: 1,
					ease: 'power1.inOut'
				},
				'-=0.35'
			)
			.to(projectText, {
				opacity: 1,
				y: 0,
				duration: 0.5
			})
	})

	const allBannerH2s = document.querySelectorAll('.banner h2')
	const allBannerPs = document.querySelectorAll('.banner p')
	const allBannerImages = document.querySelectorAll('.banner')

	allBannerImages.forEach((image) => {
		gsap.to(image, {
			scrollTrigger: {
				trigger: image,
				start: 'top 80%',
				toggleActions: 'play none none reverse'
			},
			clipPath: 'polygon(0 0, 99.99% 0, 99.99% 100%, 0% 100%)'
		})
	})

	allBannerH2s.forEach((h2, index) => {
		let tl = gsap.timeline({
			scrollTrigger: {
				trigger: h2,
				start: 'top bottom',
				toggleActions: 'play none none reverse'
			}
		})

		tl.to(h2, {
			y: 0,
			opacity: 1
		}).to(allBannerPs[index], {
			y: 0,
			opacity: 1
		})
	})

	gsap.to('.fine-art', {
		scrollTrigger: {
			trigger: '.fine-art .projects',
			start: 'top 70%',
			toggleActions: 'play none none reverse'
		},
		backgroundColor: '#030303'
	})
	gsap.to('.sketchbook', {
		scrollTrigger: {
			trigger: '.sketchbook .projects',
			start: 'top 70%',
			toggleActions: 'play none none reverse'
		},
		backgroundColor: '#ffffff'
	})
	gsap.to('.kustom', {
		scrollTrigger: {
			trigger: '.kustom .projects',
			start: 'top 70%',
			toggleActions: 'play none none reverse'
		},
		backgroundColor: '#532b77'
	})
</script>
<section
	id={title.split(' ').join('-').toLowerCase()}
	class={`
	${themeColor.split(' ').join('-').toLowerCase()}
	collection-section`}
>
	<div class="wrapper">
		<div class="banner">
			<div class="content">
				<h2>{title}</h2>
				<p>{description}</p>
			</div>
		</div>
		<div class="projects">
			{
				themeColor === 'sketchbook' ? (
					<img src="/images/image 53.webp" alt="Biker Illustration" />
				) : null
			}
			{
				projects.map((project, index) => (
					<Project
						title={project.title}
						text={project.description}
						index={index}
						image={project.image}
					/>
				))
			}
		</div>
		<div class="bottom"></div>
	</div>
</section>

<style is:global define:vars={{ bgUrl }} lang="scss">
	.collection-section {
		background-color: $white;

		.wrapper {
			display: flex;
			flex-direction: column;
			align-items: center;
			.banner {
				background-image: linear-gradient(#0303036d, #0303036d), var(--bgUrl);
				background-size: cover;
				background-position: center;
				width: 100vw;
				margin-block-start: -6rem;
				padding-block: 36rem 2rem;
				clip-path: polygon(0 0, 0 0, 0 100%, 0% 100%);

				@media (max-width: 700px) {
					// margin-block-start: -3rem !important;
					padding-block: 32rem 2rem;
				}
				@media (max-width: 500px) {
					margin-block-start: -3rem !important;
				}

				.content {
					max-width: 1440px;
					margin-inline: auto;
					padding-inline: 4rem;
					width: 100%;

					@media (max-width: 700px) {
						padding-inline: 2rem;
					}
					@media (max-width: 500px) {
						padding-inline: 1rem;
					}
				}

				h2 {
					color: $white;
					opacity: 0;
					transform: translateY(4rem);

					color: $white;
				}
				p {
					color: $white;
					opacity: 0;
					transform: translateY(4rem);
					max-width: 60ch;
					margin-block: 0.5rem 0;
				}
			}
			.projects {
				display: grid;
				grid-template-columns: 1fr 1fr;
				gap: 6rem;
				position: relative;
				margin-block: 6rem;
				row-gap: 12rem;

				& > img {
					position: absolute;
					width: 150px;
					top: 55%;
				}

				.project {
					.text {
						h3 {
							color: $black;
						}
						p {
							color: $black;
						}
					}
				}
			}
			.bottom {
				display: flex;
				align-items: center;
				justify-content: space-between;
				width: 100%;
				position: relative;
				z-index: 10;
			}
		}
		&.fine-art {
			background-color: $white;

			.wrapper {
				.banner {
				}
				.projects {
					.project {
						.text {
							h3 {
								color: $white;
							}
							p {
								color: $white;
							}
						}
					}
				}
			}
		}
		&.sketchbook {
			background-color: $black;
			.wrapper {
				.banner {
				}
				.projects {
					.project {
						.text {
							h3 {
								color: $black;
							}
							p {
								color: $black;
							}
						}
					}
				}
			}
		}
		&.kustom {
			background-color: $white;

			.wrapper {
				.projects {
					.project {
						.text {
							h3 {
								color: $white;
							}
							p {
								color: $white;
							}
						}
					}
				}
			}
		}
		&.murals {
			background-color: $blue;

			.wrapper {
				.projects {
					.project {
						.text {
							h3 {
								color: $black;
							}
							p {
								color: $black;
							}
						}
					}
				}
			}
		}
		@media (max-width: 1024px) {
			.wrapper {
				.projects {
					grid-template-columns: 1fr 1fr;
					column-gap: 4rem;
					row-gap: 6rem;

					& > img {
						top: 55%;
						left: 0;
						z-index: 1;
						width: 100px;
					}
				}
			}
		}
		@media (max-width: 800px) {
			.wrapper {
				.projects {
					grid-template-columns: 1fr;
					column-gap: 4rem;
					row-gap: 6rem;

					& > img {
						top: 100.5%;
						right: 0;
						width: 60px;
					}
				}
			}
		}

		@media (max-width: 550px) {
			.wrapper {
				.bottom {
					flex-direction: column;
					gap: 4rem;
				}
			}
		}
	}
</style>
