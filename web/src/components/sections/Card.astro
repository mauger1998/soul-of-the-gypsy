---
const { title, tag, text, image, pagename = 'home', styles } = Astro.props
import { formatText } from '../../lib/formatText'
import { urlForImage } from '../../lib/urlForImage'
import Button from '../Button.astro'
import Tag from '../type/Tag.astro'
const paragraphs = formatText(text)
---

<section class="card-section">
	<div class="wrapper">
		{
			pagename === 'gallery' ? (
				<dialog>
					<img id="close-modal" src="/svg/close-svgrepo-com.svg" alt="Close Modal" />
					<div class="menu">
						<div class="title">
							<h3>Search by art style</h3>
						</div>
						<div class="content">
							<div class="list">
								{styles.map((style) => (
									<div class="list-item">
										<div class="left">
											<img
												src={urlForImage(style.image).format('webp').url()}
												alt={style.image.alt}
											/>
										</div>
										<div class="right">
											<h3>{style.title}</h3>
											<p>{style.description}</p>
										</div>
									</div>
								))}
							</div>
						</div>
					</div>
				</dialog>
			) : null
		}
		<div class="card">
			<div class="left">
				{pagename === 'gallery' ? <h1>{title}</h1> : <h2>{title}</h2>}
				<Tag text={tag} />
				{paragraphs.map(({ paragraph }) => <p>{paragraph}</p>)}
				<div class="buttons">
					<Button text="See gallery now" to="/gallery/" variant="white-outline" />
					{pagename === 'gallery' ? <a id="open-modal">Search by art style</a> : null}
				</div>
			</div>
			<div class="right">
				<img src={urlForImage(image).format('webp').url()} alt={image.alt} />
				{
					pagename === 'gallery' ? (
						<img
							src="/images/stickers/gallery-stickers/birdland-sticker 1.png"
							alt="Birdland Sticker"
						/>
					) : null
				}
			</div>
		</div>
	</div>
</section>
<script>
	import { gsap } from 'gsap'
	import { ScrollTrigger } from 'gsap/ScrollTrigger'
	gsap.registerPlugin(ScrollTrigger)

	gsap.to('.card-section .card', {
		scrollTrigger: {
			trigger: '.card-section .card',
			start: 'top 90%',

			toggleActions: 'play none none reverse'
		},
		clipPath: 'polygon(0 -50%, 150% -50%, 150% 100%, 0 100%)'
	})
</script>
<script type="module">
	document.addEventListener('DOMContentLoaded', (event) => {
		const openModal = document.getElementById('open-modal')
		const dialog = document.querySelector('dialog')
		const closeModal = document.getElementById('close-modal')

		openModal.addEventListener('click', (event) => {
			event.stopPropagation() // Prevent this click from triggering the document click event
			dialog.showModal()
		})
		closeModal.addEventListener('click', (event) => {
			event.stopPropagation() // Prevent this click from triggering the document click event
			dialog.close()
		})

		document.addEventListener('click', (event) => {
			if (event.target === dialog) {
				dialog.close()
			}
		})
	})
</script>

<style lang="scss">
	.card-section {
		.wrapper {
			dialog {
				width: 100%;
				height: 100%;
				max-width: 85%;
				position: fixed;
				top: 50%;
				left: 50%;
				background-color: $white;
				transform: translate(-50%, -50%);
				padding: 2rem;
				& > img {
					width: 2rem;
					position: absolute;
					top: 1rem;
					right: 1rem;
					cursor: pointer;
				}
				&:focus {
					outline: none;
				}

				&::backdrop {
					background-color: #030303b6;
				}

				.menu {
					width: 100%;
					height: 100%;
					display: grid;
					place-content: center;
					.title {
						max-width: 700px;
						margin-inline: auto;
						width: 100%;
						h3 {
							color: $black;
							font-size: $mobile-h2;
						}
					}

					.content {
						margin-block: 2rem 0;
						width: 100%;
						max-width: 700px;
						margin-inline: auto;
						.list {
							width: 100%;
							display: flex;
							flex-direction: column;
							align-items: flex-start;
							gap: 2rem;
							.list-item {
								display: flex;
								align-items: stretch;
								gap: 1.5rem;
								transition: background-color 0.3s ease-in-out;

								&:hover {
									background-color: $black;
									transition: background-color 0.3s ease-in-out;

									.right {
										h3,
										p {
											color: $white;
											transition: color 0.3s ease-in-out;
										}
									}
									.left {
										img {
											scale: 1.05;
											transition: scale 300ms ease;
										}
									}
								}

								.left {
									width: 50%;
									height: 100%;
									display: flex;
									overflow: hidden;

									img {
										width: 100%;
										height: 100%;
										transition: scale 300ms ease;
									}
								}
								.right {
									width: 50%;
									align-self: center;

									h3 {
										color: $black;
										transition: color 0.3s ease-in-out;
									}
									p {
										color: $black;
										transition: color 0.3s ease-in-out;
									}
								}
							}
						}
					}
				}
			}
			.card {
				width: 100%;
				background-color: $light-black;
				display: flex;
				align-items: stretch;
				padding: 4rem 4rem;
				gap: 2rem;
				clip-path: polygon(0 0, 0 0, 0 100%, 0% 100%);

				.left {
					width: 55%;
					align-self: center;
					h2 {
						color: $white;
						width: 100%;
						max-width: 18ch;
						margin-block: 0 2rem;
						font-size: $mobile-h2;
					}
					h1 {
						font-size: $mobile-h1;
						color: $white;
						width: 100%;
						max-width: 18ch;
						margin-block: 0 2rem;
					}
					p {
						margin-block: 1.5rem 2.5rem;
						max-width: 50ch;
					}
					.buttons {
						display: flex;
						align-items: center;
						gap: 1rem;
						a {
							color: $white;
							font-weight: 300;
							text-decoration: underline;
							display: block;
							cursor: pointer;
						}
					}
				}
				.right {
					width: 45%;
					margin-block-end: -4rem;
					margin-inline-end: -4rem;
					width: calc(45% + 4rem);
					display: flex;
					align-items: flex-end;
					position: relative;

					img {
						&:nth-child(2) {
							position: absolute;
							width: 100px;
							top: -6rem;
							right: -2rem;
						}
					}
				}
			}
		}
		@media (max-width: 900px) {
			.wrapper {
				.card {
					flex-direction: column;

					.left {
						width: 100%;
						h2 {
							max-width: 16ch;
						}
					}
					.right {
						width: calc(100% + 4rem);
					}
				}
			}
		}
		@media (max-width: 700px) {
			.wrapper {
				.card {
					padding-inline: 2rem;
					.right {
						width: calc(100% + 2rem);
					}
				}
			}
		}
		@media (max-width: 500px) {
			.wrapper {
				.card {
					padding-inline: 1rem;
					.right {
						width: calc(100% + 1rem);
					}
				}
			}
		}
	}
</style>
