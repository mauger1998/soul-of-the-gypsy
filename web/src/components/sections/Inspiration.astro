---
import { urlForImage } from '../../lib/urlForImage'
const { cards } = Astro.props

// split cards in to 2 equal arrays
const half = Math.ceil(cards.length / 2)
const firstHalf = cards.slice(0, half)
const secondHalf = cards.slice(-half)
---

<section class="inspo-section">
	<div class="wrapper">
		<div class="title">
			<h2>Kevs Inspiration</h2>
			<p>
				Lorem ipsum dolor sit amet consectetur adipisicing elit. Natus tempore ex aliquam eos,
				blanditiis assumenda molestias dolorum dolore sit soluta ea repellendus, dolorem
				consectetur? Ratione minima esse corrupti cupiditate et.
			</p>
		</div>
		<div class="marquee">
			<div class="track">
				<div class="cards">
					{
						firstHalf.map((card) => (
							<div class="card">
								<img src={urlForImage(card.image).format('webp').url()} alt={card.image.alt} />
								<div class="content">
									<h3>{card.title}</h3>
									<p>{card.description}</p>
								</div>
							</div>
						))
					}
					{
						firstHalf.map((card) => (
							<div class="card">
								<img src={urlForImage(card.image).format('webp').url()} alt={card.image.alt} />
								<div class="content">
									<div class="text">
										<h3>{card.title}</h3>
										<p>{card.description}</p>
									</div>
								</div>
							</div>
						))
					}
				</div>
			</div>
			<div class="track track-reverse">
				<div class="cards">
					{
						secondHalf.map((card) => (
							<div class="card">
								<img src={urlForImage(card.image).format('webp').url()} alt={card.image.alt} />
								<div class="content">
									<h3>{card.title}</h3>
									<p>{card.description}</p>
								</div>
							</div>
						))
					}
					{
						secondHalf.map((card) => (
							<div class="card">
								<img src={urlForImage(card.image).format('webp').url()} alt={card.image.alt} />
								<div class="content">
									<div class="text">
										<h3>{card.title}</h3>
										<p>{card.description}</p>
									</div>
								</div>
							</div>
						))
					}
				</div>
			</div>
		</div>
	</div>
</section>

<script>
	import { gsap } from 'gsap'
	import { ScrollTrigger } from 'gsap/ScrollTrigger'
	gsap.registerPlugin(ScrollTrigger)

	const inspirationTitles = document.querySelector('.inspo-section .title')
	const inspoH2 = inspirationTitles.querySelector('h2')
	const inspoP = inspirationTitles.querySelector('p')

	gsap.to([inspoH2, inspoP], {
		scrollTrigger: {
			trigger: inspirationTitles,
			start: 'top 80%',
			toggleActions: 'play none none reverse'
		},
		opacity: 1,
		y: 0,
		stagger: 0.2
	})

	gsap.to('.track .cards .card', {
		scrollTrigger: {
			trigger: '.track .cards .card',
			start: 'top 80%',
			toggleActions: 'play none none reverse'
		},
		clipPath: ' polygon(0.001% 0, 100% 0, 100% 100%, 0.001% 100%)',
		stagger: 0.05
	})
</script>

<style lang="scss">
	.inspo-section {
		.wrapper {
			.title {
				h2 {
					color: $white;
					transform: translateY(4rem);
					opacity: 0;
				}
				p {
					max-width: 50ch;
					margin-block: 2.5rem 0;
					transform: translateY(4rem);
					opacity: 0;
				}
			}
			.marquee {
				display: flex;
				flex-direction: column;
				margin-block: 4rem 0;
				gap: 0;
				.track {
					animation: marquee 12s linear infinite alternate;
					width: 250%;
					.cards {
						display: flex;
						align-items: stretch;

						.card {
							position: relative;
							z-index: 0;
							clip-path: polygon(100% 0, 100% 0, 100% 100%, 100% 100%);

							&:hover {
								.content {
									clip-path: polygon(0.001% 0, 100% 0, 100% 100%, 0.001% 100%);
									transition: 300ms ease clip-path;
								}
							}
							.content {
								position: absolute;
								z-index: 100000;
								background-color: #03030385;
								backdrop-filter: blur(10px);
								-webkit-backdrop-filter: blur(10px);
								width: 100%;
								height: 100%;
								inset: 0;
								padding: 1rem;
								clip-path: polygon(100% 0, 100% 0, 100% 100%, 100% 100%);
								display: grid;
								transition: 300ms ease clip-path;

								place-content: center;

								h3 {
									color: $white;
								}
							}
							img {
								height: 100%;
								width: 500px;
								object-fit: cover;
								// border: 1px solid red;
							}
						}
					}
				}
				.track-reverse {
					animation-direction: alternate-reverse;
				}
				&:hover {
					.track,
					.track-reverse {
						animation-play-state: paused;
					}
				}
			}
		}
	}

	@keyframes marquee {
		0% {
			transform: translateX(-10%);
		}
		100% {
			transform: translateX(-40%);
		}
	}
</style>
