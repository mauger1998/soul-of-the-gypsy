---
import { urlForImage } from '../../lib/urlForImage'
import Button from '../Button.astro'
const { title, text, cards, sticker } = Astro.props
---

<section id="what-we-offer" class="list-section">
	<div class="wrapper">
		<div class="left">
			<div class="title">
				<h2>{title}</h2>
				<p>{text}</p>
			</div>
			<div class="mask">
				<img
					src="/images/kevs-hands.webp"
					alt="Kevs Hands Holding a Paintbrush Wearing Rock Rings"
				/>
			</div>
		</div>
		<div class="right">
			<div class="list">
				<div class="images-now">
					{
						cards.map((card) => (
							<img
								src={urlForImage(card.sticker).format('webp').url()}
								alt={card.sticker.alt}
								class="card-image"
							/>
						))
					}
				</div>
				{
					cards.map((card) => (
						<div class="list-item">
							<div class="wrap">
								<div class="circle" />
								<div class="line" />
							</div>
							<h3>{card.title}</h3>
							<p>{card.description}</p>
						</div>
					))
				}
			</div>
			<Button text="See all products" variant="white-outline" to="/gallery/" />
		</div>
	</div>
</section>
<script>
	import { gsap } from 'gsap'
	import { ScrollTrigger } from 'gsap/ScrollTrigger'
	gsap.registerPlugin(ScrollTrigger)

	const allLines = document.querySelectorAll('.line')
	const allCircles = document.querySelectorAll('.circle')

	allLines.forEach((line, index) => {
		gsap.to(line, {
			scrollTrigger: {
				trigger: line,
				start: 'top 60%',
				end: 'bottom 20%',
				scrub: true
			},
			scaleY: 1
		})
	})

	const list = document.querySelector('.list')
	const imageContainer = document.querySelector('.images-now')
	const listItems = document.querySelectorAll('.list-item')
	const images = document.querySelectorAll('.card-image')

	if (window.innerWidth > 1024) {
		listItems.forEach((listItem, index) => {
			listItem.addEventListener('mouseover', () => {
				gsap.to(images[index], {
					duration: 0.5,
					clipPath: 'polygon(1% 0, 100% 0, 100% 100%, 1% 100%)'
				})
			})

			listItem.addEventListener('mouseout', () => {
				gsap.to(images[index], {
					duration: 0.5,
					clipPath: 'polygon(100% 0, 100% 0, 100% 100%, 100% 100%)'
				})
			})
		})
		list.addEventListener('mousemove', (event) => {
			const x = event.clientX - list.getBoundingClientRect().left
			const y = event.clientY - list.getBoundingClientRect().top

			gsap.to(imageContainer, { duration: 0.5, x: x, y: y })
		})
	}

	gsap.to('.list-section .wrapper .left img ', {
		scrollTrigger: {
			trigger: '.list-section .wrapper .left img ',
			start: 'top 70%',
			toggleActions: 'play none none reverse'
		},
		clipPath: 'polygon(0 0, 99.99% 0, 99.99% 100%, 0% 100%)'
	})
</script>
<style lang="scss">
	.images-now {
		position: absolute;
		transition: 300ms ease;
		width: 200px;
		height: 250px;

		.card-image {
			position: absolute;
			width: 100%;
			height: 100%;
			object-fit: cover;
			clip-path: polygon(100% 0, 100% 0, 100% 100%, 100% 100%);
		}
	}
	.list-section {
		.wrapper {
			display: flex;
			align-items: stretch;
			gap: 6rem;
			.left {
				width: 60%;
				display: flex;
				flex-direction: column;
				align-items: flex-start;
				justify-content: space-between;
				h2 {
					color: $white;
				}
				p {
					max-width: 50ch;
					margin-block: 1.5rem 0;
				}
				.mask {
					width: 70%;
					max-height: 300px;
					overflow: hidden;
					margin-block-start: 4rem;
					img {
						max-height: 300px;
						object-fit: cover;
						clip-path: polygon(0 0, 0 0, 0 100%, 0% 100%);
						transition: scale 300ms ease;
					}

					&:hover {
						img {
							scale: 1.05;
							transition: scale 300ms ease;
						}
					}
				}
			}
			.right {
				width: 40%;
				.list {
					display: flex;
					flex-direction: column;
					align-items: flex-start;
					gap: 4rem;
					position: relative;
					margin-block-end: 3.5rem;

					.list-item {
						position: relative;
						height: 100%;
						padding: 0;
						display: flex;
						flex-direction: column;
						align-items: flex-start;
						justify-content: flex-start;
						height: max-content;

						&:not(:nth-child(2)) {
							// padding-block-start: 4rem;
						}

						.wrap {
							position: absolute;
							left: -3rem;
							width: 1.5rem;
							height: 1.5rem;
							border-radius: 50%;
							top: 18%;
							transform: translateY(-50%);
							.circle {
								width: 100%;
								height: 100%;
								border-radius: 50%;
								background-color: $blue;
							}
						}
						&:not(:last-child) {
							.wrap {
								.line {
									position: absolute;
									height: 160px;
									left: 50%;
									transform: translateX(-50%);
									width: 1px;
									border: none;
									background-color: $blue;
									scale: 1 0;
									transform-origin: top;
									opacity: 1;

									@media (max-width: 700px) {
										height: 145px;
									}
								}
							}
						}

						h3 {
							color: $white;
						}
						p {
							color: $white;
							max-width: 50ch;
							margin-block: 0.5rem 0;
						}
					}
				}
			}
		}
		@media (max-width: 1024px) {
			.wrapper {
				flex-direction: column;
				gap: 4rem;
				.left {
					width: 100%;
					position: relative;

					.mask {
						width: 100%;
					}

					& > img {
						position: absolute;
						right: 0;
					}
				}
				.right {
					width: 100%;
					.list {
						margin-inline-start: 3rem;
					}
				}
			}
		}
		@media (max-width: 600px) {
			.wrapper {
				.left {
					img {
						top: -60%;
					}
				}
			}
		}
	}
</style>
